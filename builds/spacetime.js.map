{"version":3,"file":"spacetime.js","sources":["../src/fns.js","../src/timezone/summerTime.js","../src/timezone/quick.js","../zonefile/_prefixes.js","../zonefile/unpack.js","../src/timezone/guessTz.js","../src/timezone/parseOffset.js","../src/timezone/find.js","../src/data/milliseconds.js","../src/methods/set/walk.js","../src/data/months.js","../src/input/parseOffset.js","../src/input/parseTime.js","../src/data/monthLengths.js","../src/input/hasDate.js","../src/input/strParse.js","../src/input/named-dates.js","../src/input/index.js","../src/data/days.js","../src/methods/format/_offset.js","../src/methods/format/index.js","../src/methods/format/unixFmt.js","../src/methods/progress.js","../src/methods/nearest.js","../src/methods/diff/one.js","../src/methods/diff/waterfall.js","../src/methods/diff/index.js","../src/methods/since.js","../src/data/seasons.js","../src/data/quarters.js","../src/methods/startOf.js","../src/methods/every.js","../src/timezone/index.js","../src/methods.js","../src/methods/set/set.js","../src/methods/query/01-time.js","../src/methods/query/02-date.js","../src/methods/query/03-year.js","../src/methods/query/index.js","../src/methods/add.js","../src/methods/same.js","../src/methods/compare.js","../src/methods/i18n.js","../src/spacetime.js","../src/whereIts.js","../_version.js","../src/index.js"],"sourcesContent":["//git:blame @JuliasCaesar https://www.timeanddate.com/date/leapyear.html\nexports.isLeapYear = year => (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n// unsurprisingly-nasty `typeof date` call\nexports.isDate = d => Object.prototype.toString.call(d) === '[object Date]' && !isNaN(d.valueOf())\nexports.isArray = input => Object.prototype.toString.call(input) === '[object Array]'\nexports.isObject = input => Object.prototype.toString.call(input) === '[object Object]'\n\nexports.zeroPad = (str, len = 2) => {\n  let pad = '0'\n  str = str + ''\n  return str.length >= len ? str : new Array(len - str.length + 1).join(pad) + str\n}\n\nexports.titleCase = str => {\n  if (!str) {\n    return ''\n  }\n  return str[0].toUpperCase() + str.substr(1)\n}\n\nexports.ordinal = i => {\n  let j = i % 10\n  let k = i % 100\n  if (j === 1 && k !== 11) {\n    return i + 'st'\n  }\n  if (j === 2 && k !== 12) {\n    return i + 'nd'\n  }\n  if (j === 3 && k !== 13) {\n    return i + 'rd'\n  }\n  return i + 'th'\n}\n\n//strip 'st' off '1st'..\nexports.toCardinal = str => {\n  str = String(str)\n  str = str.replace(/([0-9])(st|nd|rd|th)$/i, '$1')\n  return parseInt(str, 10)\n}\n\n//used mostly for cleanup of unit names, like 'months'\nexports.normalize = (str = '') => {\n  str = str.toLowerCase().trim()\n  str = str.replace(/ies$/, 'y') //'centuries'\n  str = str.replace(/s$/, '')\n  str = str.replace(/-/g, '')\n  if (str === 'day') {\n    return 'date'\n  }\n  return str\n}\n\nexports.getEpoch = tmp => {\n  //support epoch\n  if (typeof tmp === 'number') {\n    return tmp\n  }\n  //suport date objects\n  if (exports.isDate(tmp)) {\n    return tmp.getTime()\n  }\n  if (tmp.epoch) {\n    return tmp.epoch\n  }\n  return null\n}\n\n//make sure this input is a spacetime obj\nexports.beADate = (d, s) => {\n  if (exports.isObject(d) === false) {\n    return s.clone().set(d)\n  }\n  return d\n}\n\nexports.formatTimezone = (offset, delimiter = '') => {\n  const absOffset = Math.abs(offset)\n  const sign = offset > 0 ? '+' : '-'\n  return `${sign}${exports.zeroPad(absOffset)}${delimiter}00`\n}\n","const zeroPad = require('../fns').zeroPad\n\nconst serialize = d =>\n  zeroPad(d.getMonth() + 1) + '/' + zeroPad(d.getDate()) + ':' + zeroPad(d.getHours())\n\n// a timezone will begin with a specific offset in january\n// then some will switch to something else between november-march\nconst shouldChange = (epoch, start, end, defaultOffset) => {\n  //note: this has a cray order-of-operations issue\n  //we can't get the date, without knowing the timezone, and vice-versa\n  //it's possible that we can miss a dst-change by a few hours.\n  let d = new Date(epoch)\n  //(try to mediate this a little?)\n  let bias = d.getTimezoneOffset() || 0\n  let shift = bias + defaultOffset * 60 //in minutes\n  shift = shift * 60 * 1000 //in ms\n  d = new Date(epoch + shift)\n\n  let current = serialize(d)\n  //eg. is it after ~november?\n  if (current >= start) {\n    //eg. is it before ~march~ too?\n    if (current < end) {\n      return true\n    }\n  }\n  return false\n}\nmodule.exports = shouldChange\n","const isSummer = require('./summerTime')\n\n// this method avoids having to do a full dst-calculation on every operation\n// it reproduces some things in ./index.js, but speeds up spacetime considerably\nconst quickOffset = s => {\n  let zones = s.timezones\n  let obj = zones[s.tz]\n  if (obj === undefined) {\n    console.warn(\"Warning: couldn't find timezone \" + s.tz)\n    return 0\n  }\n  if (obj.dst === undefined) {\n    return obj.offset\n  }\n\n  //get our two possible offsets\n  let jul = obj.offset\n  let dec = obj.offset + 1 // assume it's the same for now\n  if (obj.hem === 'n') {\n    dec = jul - 1\n  }\n  let split = obj.dst.split('->')\n  let inSummer = isSummer(s.epoch, split[0], split[1], jul)\n  if (inSummer === true) {\n    return jul\n  }\n  return dec\n}\nmodule.exports = quickOffset\n","//prefixes for iana names..\nmodule.exports = [\n  'africa',\n  'america',\n  'asia',\n  'atlantic',\n  'australia',\n  'brazil',\n  'canada',\n  'chile',\n  'europe',\n  'indian',\n  'mexico',\n  'pacific',\n  'antarctica',\n  'etc'\n]\n","const data = require('./_build.json')\nconst prefixes = require('./_prefixes.js')\n\nlet all = {}\nObject.keys(data).forEach(k => {\n  let split = k.split('|')\n  let obj = {\n    offset: Number(split[0]),\n    hem: split[1]\n  }\n  if (split[2]) {\n    obj.dst = split[2]\n  }\n  let names = data[k].split(',')\n  names.forEach(str => {\n    str = str.replace(/(^[0-9]+)\\//, (before, num) => {\n      num = Number(num)\n      return prefixes[num] + '/'\n    })\n    all[str] = obj\n  })\n})\n\nall['utc'] = {\n  offset: 0,\n  hem: 'n' //(sorry)\n}\n\n//add etc/gmt+n\nfor (let i = -14; i <= 14; i += 0.5) {\n  let num = i\n  if (num > 0) {\n    num = '+' + num\n  }\n  let name = 'etc/gmt' + num\n  all[name] = {\n    offset: i * -1, //they're negative!\n    hem: 'n' //(sorry)\n  }\n  name = 'utc/gmt' + num //this one too, why not.\n  all[name] = {\n    offset: i * -1,\n    hem: 'n'\n  }\n}\n// console.log(all)\n\n// console.log(Object.keys(all).length)\nmodule.exports = all\n","//find the implicit iana code for this machine.\n//safely query the Intl object\n//based on - https://bitbucket.org/pellepim/jstimezonedetect/src\nconst fallbackTZ = 'utc' //\n\n//this Intl object is not supported often, yet\nconst safeIntl = () => {\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return null\n  }\n  let format = Intl.DateTimeFormat()\n  if (typeof format === 'undefined' || typeof format.resolvedOptions === 'undefined') {\n    return null\n  }\n  let timezone = format.resolvedOptions().timeZone\n  if (!timezone) {\n    return null\n  }\n  return timezone.toLowerCase()\n}\n\nconst guessTz = () => {\n  let timezone = safeIntl()\n  if (timezone === null) {\n    return fallbackTZ\n  }\n  return timezone\n}\n//do it once per computer\nmodule.exports = guessTz\n","const isOffset = /(\\-?[0-9]+)h(rs)?/i\nconst isNumber = /(\\-?[0-9]+)/\nconst utcOffset = /utc([\\-+]?[0-9]+)/i\nconst gmtOffset = /gmt([\\-+]?[0-9]+)/i\n\nconst toIana = function(num) {\n  num = Number(num)\n  if (num > -13 && num < 13) {\n    num = num * -1 //it's opposite!\n    num = (num > 0 ? '+' : '') + num //add plus sign\n    return 'etc/gmt' + num\n  }\n  return null\n}\n\nconst parseOffset = function(tz) {\n  // '+5hrs'\n  let m = tz.match(isOffset)\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'utc+5'\n  m = tz.match(utcOffset)\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  // 'GMT-5' (not opposite)\n  m = tz.match(gmtOffset)\n  if (m !== null) {\n    let num = Number(m[1]) * -1\n    return toIana(num)\n  }\n  // '+5'\n  m = tz.match(isNumber)\n  if (m !== null) {\n    return toIana(m[1])\n  }\n  return null\n}\nmodule.exports = parseOffset\n","const tzs = require('../../zonefile/unpack')\nconst guessTz = require('./guessTz')\nconst parseOffset = require('./parseOffset')\nconst local = guessTz()\n\n//add all the city names by themselves\nconst cities = Object.keys(tzs).reduce((h, k) => {\n  let city = k.split('/')[1] || ''\n  city = city.replace(/_/g, ' ')\n  h[city] = k\n  return h\n}, {})\n\n//try to match these against iana form\nconst normalize = tz => {\n  tz = tz.replace(/ time/g, '')\n  tz = tz.replace(/ (standard|daylight|summer)/g, '')\n  tz = tz.replace(/\\b(east|west|north|south)ern/g, '$1')\n  tz = tz.replace(/\\b(africa|america|australia)n/g, '$1')\n  tz = tz.replace(/\\beuropean/g, 'europe')\n  tz = tz.replace(/\\islands/g, 'island')\n  return tz\n}\n\n// try our best to reconcile the timzone to this given string\nconst lookupTz = (str, zones) => {\n  if (!str) {\n    return local\n  }\n  let tz = str.trim()\n  let split = str.split('/')\n  //support long timezones like 'America/Argentina/Rio_Gallegos'\n  if (split.length > 2 && zones.hasOwnProperty(tz) === false) {\n    tz = split[0] + '/' + split[1]\n  }\n  tz = tz.toLowerCase()\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz\n  }\n  //lookup more loosely..\n  tz = normalize(tz)\n  if (zones.hasOwnProperty(tz) === true) {\n    return tz\n  }\n  //try city-names\n  if (cities.hasOwnProperty(tz) === true) {\n    return cities[tz]\n  }\n  // //try to parse '-5h'\n  if (/[0-9]/.test(tz) === true) {\n    let id = parseOffset(tz)\n    if (id) {\n      return id\n    }\n  }\n\n  throw new Error(\n    \"Spacetime: Cannot find timezone named: '\" + str + \"'. Please enter an IANA timezone id.\"\n  )\n}\nmodule.exports = lookupTz\n","let o = {\n  millisecond: 1\n}\no.second = 1000\no.minute = 60000\no.hour = 3.6e6 // dst is supported post-hoc\no.day = 8.64e7 //\no.date = o.day\no.month = 8.64e7 * 29.5 //(average)\no.week = 6.048e8\no.year = 3.154e10 // leap-years are supported post-hoc\n//add plurals\nObject.keys(o).forEach(k => {\n  o[k + 's'] = o[k]\n})\nmodule.exports = o\n","const ms = require('../../data/milliseconds')\n\n//basically, step-forward/backward until js Date object says we're there.\nconst walk = (s, n, fn, unit, previous) => {\n  let current = s.d[fn]()\n  if (current === n) {\n    return //already there\n  }\n  let startUnit = previous === null ? null : s.d[previous]()\n  let original = s.epoch\n  //try to get it as close as we can\n  let diff = n - current\n  s.epoch += ms[unit] * diff\n\n  //DST edge-case: if we are going many days, be a little conservative\n  if (unit === 'day' && Math.abs(diff) > 28) {\n    //but don't push it over a month\n    if (n < 28) {\n      s.epoch += ms.hour\n    }\n  }\n  //repair it if we've gone too far or something\n  //(go by half-steps, just in case)\n  const halfStep = ms[unit] / 2\n  while (s.d[fn]() < n) {\n    s.epoch += halfStep\n  }\n  while (s.d[fn]() > n) {\n    s.epoch -= halfStep\n  }\n  //oops, did we change previous unit? revert it.\n  if (previous !== null && startUnit !== s.d[previous]()) {\n    // console.warn('spacetime warning: missed setting ' + unit)\n    s.epoch = original\n    // i mean, but make it close...\n    s.epoch += ms[unit] * diff * 0.89 // i guess?\n  }\n}\n//find the desired date by a increment/check while loop\nconst units = {\n  year: {\n    valid: n => n > -4000 && n < 4000,\n    walkTo: (s, n) => walk(s, n, 'getFullYear', 'year', null)\n  },\n  month: {\n    valid: n => n >= 0 && n <= 11,\n    walkTo: (s, n) => {\n      let d = s.d\n      let current = d.getMonth()\n      let original = s.epoch\n      let startUnit = d.getFullYear()\n      if (current === n) {\n        return\n      }\n      //try to get it as close as we can..\n      let diff = n - current\n      s.epoch += ms.day * (diff * 28) //special case\n      //oops, did we change the year? revert it.\n      if (startUnit !== s.d.getFullYear()) {\n        s.epoch = original\n      }\n      //incriment by day\n      while (s.d.getMonth() < n) {\n        s.epoch += ms.day\n      }\n      while (s.d.getMonth() > n) {\n        s.epoch -= ms.day\n      }\n    }\n  },\n  date: {\n    valid: n => n > 0 && n <= 31,\n    walkTo: (s, n) => walk(s, n, 'getDate', 'day', 'getMonth')\n  },\n  hour: {\n    valid: n => n >= 0 && n < 24,\n    walkTo: (s, n) => walk(s, n, 'getHours', 'hour', 'getDate')\n  },\n  minute: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => walk(s, n, 'getMinutes', 'minute', 'getHours')\n  },\n  second: {\n    valid: n => n >= 0 && n < 60,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.seconds(n).epoch\n    }\n  },\n  millisecond: {\n    valid: n => n >= 0 && n < 1000,\n    walkTo: (s, n) => {\n      //do this one directly\n      s.epoch = s.milliseconds(n).epoch\n    }\n  }\n}\n\nconst walkTo = (s, wants) => {\n  let keys = Object.keys(units)\n  let old = s.clone()\n  for (let i = 0; i < keys.length; i++) {\n    let k = keys[i]\n    let n = wants[k]\n    if (n === undefined) {\n      n = old[k]()\n    }\n    if (typeof n === 'string') {\n      n = parseInt(n, 10)\n    }\n    //make-sure it's valid\n    if (!units[k].valid(n)) {\n      s.epoch = null\n      if (s.silent === false) {\n        console.warn('invalid ' + k + ': ' + n)\n      }\n      return\n    }\n    // console.log(k, n)\n    units[k].walkTo(s, n)\n  }\n  return\n}\n\nmodule.exports = walkTo\n","let shortMonths = [\n  'jan',\n  'feb',\n  'mar',\n  'apr',\n  'may',\n  'jun',\n  'jul',\n  'aug',\n  'sept',\n  'oct',\n  'nov',\n  'dec'\n]\nlet longMonths = [\n  'january',\n  'february',\n  'march',\n  'april',\n  'may',\n  'june',\n  'july',\n  'august',\n  'september',\n  'october',\n  'november',\n  'december'\n]\n\nfunction buildMapping() {\n  const obj = {\n    sep: 8 //support this format\n  }\n  for (let i = 0; i < shortMonths.length; i++) {\n    obj[shortMonths[i]] = i\n  }\n  for (let i = 0; i < longMonths.length; i++) {\n    obj[longMonths[i]] = i\n  }\n  return obj\n}\n\nmodule.exports = {\n  short: () => shortMonths,\n  long: () => longMonths,\n  mapping: () => buildMapping(),\n  set: i18n => {\n    shortMonths = i18n.short || shortMonths\n    longMonths = i18n.long || longMonths\n  }\n}\n","//pull-apart ISO offsets, like \"+0100\"\nconst parseOffset = (s, offset) => {\n  if (!offset) {\n    return s\n  }\n  //this is a fancy-move\n  if (offset === 'Z') {\n    offset = '+0000'\n  }\n\n  // according to ISO8601, tz could be hh:mm, hhmm or hh\n  // so need few more steps before the calculation.\n  let num = 0\n\n  // for (+-)hh:mm\n  if (/^[\\+-]?[0-9]{2}:[0-9]{2}$/.test(offset)) {\n    //support \"+01:00\"\n    if (/:00/.test(offset) === true) {\n      offset = offset.replace(/:00/, '')\n    }\n    //support \"+01:30\"\n    if (/:30/.test(offset) === true) {\n      offset = offset.replace(/:30/, '.5')\n    }\n  }\n\n  // for (+-)hhmm\n  if (/^[\\+-]?[0-9]{4}$/.test(offset)) {\n    offset = offset.replace(/30$/, '.5')\n  }\n\n  num = parseFloat(offset)\n\n  //divide by 100 or 10 - , \"+0100\", \"+01\"\n  if (Math.abs(num) > 100) {\n    num = num / 100\n  }\n  //okay, try to match it to a utc timezone\n  //remember - this is opposite! a -5 offset maps to Etc/GMT+5  ¯\\_(:/)_/¯\n  //https://askubuntu.com/questions/519550/why-is-the-8-timezone-called-gmt-8-in-the-filesystem\n  num *= -1\n\n  if (num >= 0) {\n    num = '+' + num\n  }\n  let tz = 'etc/gmt' + num\n  let zones = s.timezones\n\n  if (zones[tz]) {\n    // log a warning if we're over-writing a given timezone?\n    // console.log('changing timezone to: ' + tz)\n    s.tz = tz\n  }\n  return s\n}\nmodule.exports = parseOffset\n","const parseTime = (s, str = '') => {\n  str = str.replace(/^\\s+/, '').toLowerCase() //trim\n  //formal time formats - 04:30.23\n  let arr = str.match(/([0-9]{1,2}):([0-9]{1,2}):?([0-9]{1,2})?[:\\.]?([0-9]{1,4})?/)\n  if (arr !== null) {\n    //validate it a little\n    let h = Number(arr[1])\n    if (h < 0 || h > 24) {\n      return s.startOf('day')\n    }\n    let m = Number(arr[2]) //don't accept '5:3pm'\n    if (arr[2].length < 2 || m < 0 || m > 59) {\n      return s.startOf('day')\n    }\n    s = s.hour(h)\n    s = s.minute(m)\n    s = s.seconds(arr[3] || 0)\n    s = s.millisecond(arr[4] || 0)\n    //parse-out am/pm\n    let ampm = str.match(/[\\b0-9](am|pm)\\b/)\n    if (ampm !== null && ampm[1]) {\n      s = s.ampm(ampm[1])\n    }\n    return s\n  }\n  //try an informal form - 5pm (no minutes)\n  arr = str.match(/([0-9]+) ?(am|pm)/)\n  if (arr !== null && arr[1]) {\n    let h = Number(arr[1])\n    //validate it a little..\n    if (h > 12 || h < 1) {\n      return s.startOf('day')\n    }\n    s = s.hour(arr[1] || 0)\n    s = s.ampm(arr[2])\n    s = s.startOf('hour')\n    return s\n  }\n  //no time info found, use start-of-day\n  s = s.startOf('day')\n  return s\n}\nmodule.exports = parseTime\n","const monthLengths = [\n  31, // January - 31 days\n  28, // February - 28 days in a common year and 29 days in leap years\n  31, // March - 31 days\n  30, // April - 30 days\n  31, // May - 31 days\n  30, // June - 30 days\n  31, // July - 31 days\n  31, // August - 31 days\n  30, // September - 30 days\n  31, // October - 31 days\n  30, // November - 30 days\n  31 // December - 31 days\n]\nmodule.exports = monthLengths\n","const monthLengths = require('../data/monthLengths')\nconst isLeapYear = require('../fns').isLeapYear\n\n//given a month, return whether day number exists in it\nconst hasDate = obj => {\n  //invalid values\n  if (monthLengths.hasOwnProperty(obj.month) !== true) {\n    return false\n  }\n  //support leap-year in february\n  if (obj.month === 1) {\n    if (isLeapYear(obj.year) && obj.date <= 29) {\n      return true\n    } else {\n      return obj.date <= 28\n    }\n  }\n  //is this date too-big for this month?\n  let max = monthLengths[obj.month] || 0\n  if (obj.date <= max) {\n    return true\n  }\n  return false\n}\nmodule.exports = hasDate\n","const walkTo = require('../methods/set/walk')\nconst months = require('../data/months').mapping()\nconst parseOffset = require('./parseOffset')\nconst parseTime = require('./parseTime')\nconst hasDate = require('./hasDate')\nconst fns = require('../fns')\n\nconst parseYear = (str = '') => {\n  //support '18 -> 2018\n  // str = str.replace(/^'([0-9]{2})/, '20$1')\n  // str = str.replace('([0-9]+) ?b\\.?c\\.?$', '-$1')\n  let year = parseInt(str.trim(), 10)\n  year = year || new Date().getFullYear()\n  return year\n}\n\nconst strFmt = [\n  //iso-this 1998-05-30T22:00:00:000Z, iso-that 2017-04-03T08:00:00-0700\n  {\n    reg: /^(\\-?0?0?[0-9]{3,4})-([0-9]{1,2})-([0-9]{1,2})[T| ]([0-9.:]+)(Z|[0-9\\-\\+:]+)?$/,\n    parse: (s, arr, givenTz, options) => {\n      let month = parseInt(arr[2], 10) - 1\n      let obj = {\n        year: arr[1],\n        month,\n        date: arr[3]\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      parseOffset(s, arr[5], givenTz, options)\n      walkTo(s, obj)\n      s = parseTime(s, arr[4])\n      return s\n    }\n  },\n  //iso \"2015-03-25\" or \"2015/03/25\" or \"2015/03/25 12:26:14 PM\"\n  {\n    reg: /^([0-9]{4})[\\-\\/]([0-9]{1,2})[\\-\\/]([0-9]{1,2}),?( [0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n    parse: (s, arr) => {\n      let obj = {\n        year: arr[1],\n        month: parseInt(arr[2], 10) - 1,\n        date: parseInt(arr[3], 10)\n      }\n      if (obj.month >= 12) {\n        //support yyyy/dd/mm (weird, but ok)\n        obj.date = parseInt(arr[2], 10)\n        obj.month = parseInt(arr[3], 10) - 1\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, arr[4])\n      return s\n    }\n  },\n  //mm/dd/yyyy - uk/canada \"6/28/2019, 12:26:14 PM\"\n  {\n    reg: /^([0-9]{1,2})[\\-\\/]([0-9]{1,2})[\\-\\/]?([0-9]{4})?,?( [0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n    parse: (s, arr) => {\n      let month = parseInt(arr[1], 10) - 1\n      let date = parseInt(arr[2], 10)\n      //support dd/mm/yyy\n      if (s.british || month >= 12) {\n        date = parseInt(arr[1], 10)\n        month = parseInt(arr[2], 10) - 1\n      }\n      let year = arr[3] || new Date().getFullYear()\n      let obj = {\n        year,\n        month,\n        date\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, arr[4])\n      return s\n    }\n  },\n  //common british format - \"25-feb-2015\"\n  {\n    reg: /^([0-9]{1,2})[\\-\\/]([a-z]+)[\\-\\/]?([0-9]{4})?$/i,\n    parse: (s, arr) => {\n      let month = months[arr[2].toLowerCase()]\n      let year = parseYear(arr[3])\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[1] || '')\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, arr[4])\n      return s\n    }\n  },\n\n  //Long \"Mar 25 2015\"\n  //February 22, 2017 15:30:00\n  {\n    reg: /^([a-z]+) ([0-9]{1,2}(?:st|nd|rd|th)?),?( [0-9]{4})?( ([0-9:]+( ?am| ?pm| ?gmt)?))?$/i,\n    parse: (s, arr) => {\n      let month = months[arr[1].toLowerCase()]\n      let year = parseYear(arr[3])\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[2] || '')\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, arr[4])\n      return s\n    }\n  },\n  //February 2017 (implied date)\n  {\n    reg: /^([a-z]+) ([0-9]{4})$/i,\n    parse: (s, arr) => {\n      let month = months[arr[1].toLowerCase()]\n      let year = parseYear(arr[2])\n      let obj = {\n        year,\n        month,\n        date: 1\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, arr[4])\n      return s\n    }\n  },\n  //Long \"25 Mar 2015\"\n  {\n    reg: /^([0-9]{1,2}(?:st|nd|rd|th)?) ([a-z]+),?( [0-9]{4})?,? ?([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,\n    parse: (s, arr) => {\n      let month = months[arr[2].toLowerCase()]\n      if (!month) {\n        return null\n      }\n      let year = parseYear(arr[3])\n      let obj = {\n        year,\n        month,\n        date: fns.toCardinal(arr[1])\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s, arr[4])\n      return s\n    }\n  },\n  {\n    // '200bc'\n    reg: /^[0-9,]+ ?b\\.?c\\.?$/i,\n    parse: (s, arr) => {\n      let str = arr[0] || ''\n      //make negative-year\n      str = str.replace(/^([0-9,]+) ?b\\.?c\\.?$/i, '-$1')\n      //remove commas\n      str = str.replace(/,/g, '')\n      let year = parseInt(str.trim(), 10)\n      let d = new Date()\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s)\n      return s\n    }\n  },\n  {\n    // '200ad'\n    reg: /^[0-9,]+ ?(a\\.?d\\.?|c\\.?e\\.?)$/i,\n    parse: (s, arr) => {\n      let str = arr[0] || ''\n      //remove commas\n      str = str.replace(/,/g, '')\n      let year = parseInt(str.trim(), 10)\n      let d = new Date()\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s)\n      return s\n    }\n  },\n  {\n    // '1992'\n    reg: /^[0-9]{4}( ?a\\.?d\\.?)?$/i,\n    parse: (s, arr) => {\n      let year = parseYear(arr[0])\n      let d = new Date()\n      let obj = {\n        year,\n        month: d.getMonth(),\n        date: d.getDate()\n      }\n      if (hasDate(obj) === false) {\n        s.epoch = null\n        return s\n      }\n      walkTo(s, obj)\n      s = parseTime(s)\n      return s\n    }\n  }\n]\n\nmodule.exports = strFmt\n","const dates = {\n  now: s => {\n    s.epoch = Date.now()\n    return s\n  },\n  tonight: s => {\n    s.epoch = Date.now()\n    s = s.hour(18)\n    return s\n  },\n  today: s => {\n    s.epoch = Date.now()\n    return s\n  },\n  tomorrow: s => {\n    s.epoch = Date.now()\n    s = s.add(1, 'day')\n    s = s.startOf('day')\n    return s\n  },\n  yesterday: s => {\n    s.epoch = Date.now()\n    s = s.subtract(1, 'day')\n    s = s.startOf('day')\n    return s\n  },\n  christmas: s => {\n    let year = new Date().getFullYear()\n    s = s.set([year, 11, 25, 18, 0, 0]) // Dec 25\n    return s\n  },\n  'new years': s => {\n    let year = new Date().getFullYear()\n    s = s.set([year, 11, 31, 18, 0, 0]) // Dec 31\n    return s\n  }\n}\ndates['new years eve'] = dates['new years']\nmodule.exports = dates\n","const strFmt = require('./strParse')\nconst fns = require('../fns')\nconst namedDates = require('./named-dates')\n//we have to actually parse these inputs ourselves\n//  -  can't use built-in js parser ;(\n//=========================================\n// ISO Date\t  \"2015-03-25\"\n// Short Date\t\"03/25/2015\" or \"2015/03/25\"\n// Long Date\t\"Mar 25 2015\" or \"25 Mar 2015\"\n// Full Date\t\"Wednesday March 25 2015\"\n//=========================================\n\n//-- also -\n// if the given epoch is really small, they've probably given seconds and not milliseconds\n// anything below this number is likely (but not necessarily) a mistaken input.\n// this may seem like an arbitrary number, but it's 'within jan 1970'\n// this is only really ambiguous until 2054 or so\nconst minimumEpoch = 2500000000\n\nconst defaults = {\n  year: new Date().getFullYear(),\n  month: 0,\n  date: 1\n}\n\n//support [2016, 03, 01] format\nconst handleArray = (s, arr) => {\n  let order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond']\n  for (let i = 0; i < order.length; i++) {\n    let num = arr[i] || defaults[order[i]] || 0\n    s = s[order[i]](num)\n  }\n  return s\n}\n//support {year:2016, month:3} format\nconst handleObject = (s, obj) => {\n  obj = Object.assign({}, defaults, obj)\n  let keys = Object.keys(obj)\n  for (let i = 0; i < keys.length; i++) {\n    let unit = keys[i]\n    //make sure we have this method\n    if (s[unit] === undefined || typeof s[unit] !== 'function') {\n      continue\n    }\n    //make sure the value is a number\n    if (obj[unit] === null || obj[unit] === undefined || obj[unit] === '') {\n      continue\n    }\n    let num = obj[unit] || defaults[unit] || 0\n    s = s[unit](num)\n  }\n  return s\n}\n\n//find the epoch from different input styles\nconst parseInput = (s, input, givenTz) => {\n  //if we've been given a epoch number, it's easy\n  if (typeof input === 'number') {\n    if (input > 0 && input < minimumEpoch && s.silent === false) {\n      console.warn('  - Warning: You are setting the date to January 1970.')\n      console.warn('       -   did input seconds instead of milliseconds?')\n    }\n    s.epoch = input\n    return s\n  }\n  //set tmp time\n  s.epoch = Date.now()\n  if (input === null || input === undefined) {\n    return s //k, we're good.\n  }\n  //support input of Date() object\n  if (fns.isDate(input) === true) {\n    s.epoch = input.getTime()\n    return s\n  }\n  //support [2016, 03, 01] format\n  if (fns.isArray(input) === true) {\n    s = handleArray(s, input)\n    return s\n  }\n  //support {year:2016, month:3} format\n  if (fns.isObject(input) === true) {\n    //support spacetime object as input\n    if (input.epoch) {\n      s.epoch = input.epoch\n      s.tz = input.tz\n      return s\n    }\n    s = handleObject(s, input)\n    return s\n  }\n  //input as a string..\n  if (typeof input !== 'string') {\n    return s\n  }\n  //little cleanup..\n  input = input.replace(/\\b(mon|tues|wed|wednes|thu|thurs|fri|sat|satur|sun)(day)?\\b/i, '')\n  input = input.replace(/,/g, '')\n  input = input.replace(/ +/g, ' ').trim()\n  //try some known-words, like 'now'\n  if (namedDates.hasOwnProperty(input) === true) {\n    s = namedDates[input](s)\n    return s\n  }\n  //try each text-parse template, use the first good result\n  for (let i = 0; i < strFmt.length; i++) {\n    let m = input.match(strFmt[i].reg)\n    if (m) {\n      let res = strFmt[i].parse(s, m, givenTz)\n      if (res !== null) {\n        return res\n      }\n    }\n  }\n  if (s.silent === false) {\n    console.warn(\"Warning: couldn't parse date-string: '\" + input + \"'\")\n  }\n  s.epoch = null\n  return s\n}\nmodule.exports = parseInput\n","let shortDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat']\nlet longDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']\n\nmodule.exports = {\n  short: () => shortDays,\n  long: () => longDays,\n  set: i18n => {\n    shortDays = i18n.short || shortDays\n    longDays = i18n.long || longDays\n  }\n}\n","const fns = require('../../fns')\n\n// create the timezone offset part of an iso timestamp\n// it's kind of nuts how involved this is\n// \"+01:00\", \"+0100\", or simply \"+01\"\nconst isoOffset = s => {\n  let offset = s.timezone().current.offset\n  const isNegative = offset < 0\n  let minute = '00'\n  //handle 5.5 → '5:30'\n  if (Math.abs(offset % 1) === 0.5) {\n    minute = '30'\n    if (offset >= 0) {\n      offset = Math.floor(offset)\n    } else {\n      offset = Math.ceil(offset)\n    }\n  }\n  if (isNegative) {\n    //handle negative sign\n    offset *= -1\n    offset = fns.zeroPad(offset, 2)\n    offset = '-' + offset\n  } else {\n    offset = fns.zeroPad(offset, 2)\n    offset = '+' + offset\n  }\n  offset = offset + ':' + minute\n  //'Z' means 00\n  if (offset === '+00:00') {\n    offset = 'Z'\n  }\n  return offset\n}\n\nmodule.exports = isoOffset\n","const fns = require('../../fns')\nconst months = require('../../data/months')\nconst days = require('../../data/days')\nconst isoOffset = require('./_offset')\n\nconst format = {\n  day: s => fns.titleCase(s.dayName()),\n  'day-short': s => fns.titleCase(days.short()[s.day()]),\n  'day-number': s => s.day(),\n  'day-ordinal': s => fns.ordinal(s.day()),\n  'day-pad': s => fns.zeroPad(s.day()),\n\n  date: s => s.date(),\n  'date-ordinal': s => fns.ordinal(s.date()),\n  'date-pad': s => fns.zeroPad(s.date()),\n\n  month: s => fns.titleCase(s.monthName()),\n  'month-short': s => fns.titleCase(months.short()[s.month()]),\n  'month-number': s => s.month(),\n  'month-ordinal': s => fns.ordinal(s.month()),\n  'month-pad': s => fns.zeroPad(s.month()),\n  'iso-month': s => fns.zeroPad(s.month() + 1), //1-based months\n\n  year: s => {\n    let year = s.year()\n    if (year > 0) {\n      return year\n    }\n    year = Math.abs(year)\n    return year + ' BC'\n  },\n  'year-short': s => {\n    let year = s.year()\n    if (year > 0) {\n      return `'${String(s.year()).substr(2, 4)}`\n    }\n    year = Math.abs(year)\n    return year + ' BC'\n  },\n  'iso-year': s => {\n    let year = s.year()\n    let isNegative = year < 0\n    let str = fns.zeroPad(Math.abs(year), 4) //0-padded\n    if (isNegative) {\n      //negative years are for some reason 6-digits ('-00008')\n      str = fns.zeroPad(str, 6)\n      str = '-' + str\n    }\n    return str\n  },\n\n  time: s => s.time(),\n  'time-24': s => `${s.hour24()}:${fns.zeroPad(s.minute())}`,\n  hour: s => s.hour12(),\n  'hour-pad': s => fns.zeroPad(s.hour12()),\n  'hour-24': s => s.hour24(),\n  'hour-24-pad': s => fns.zeroPad(s.hour24()),\n\n  minute: s => s.minute(),\n  'minute-pad': s => fns.zeroPad(s.minute()),\n  second: s => s.second(),\n  'second-pad': s => fns.zeroPad(s.second()),\n\n  ampm: s => s.ampm(),\n  quarter: s => 'Q' + s.quarter(),\n  season: s => s.season(),\n  era: s => s.era(),\n  json: s => s.json(),\n  timezone: s => s.timezone().name,\n  offset: s => isoOffset(s),\n\n  numeric: s => `${s.year()}/${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}`, // yyyy/mm/dd\n  'numeric-us': s => `${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}/${s.year()}`, // mm/dd/yyyy\n  'numeric-uk': s => `${fns.zeroPad(s.date())}/${fns.zeroPad(s.month() + 1)}/${s.year()}`, //dd/mm/yyyy\n  'mm/dd': s => `${fns.zeroPad(s.month() + 1)}/${fns.zeroPad(s.date())}`, //mm/dd\n\n  // ... https://en.wikipedia.org/wiki/ISO_8601 ;(((\n  iso: s => {\n    let year = s.format('iso-year')\n    let month = fns.zeroPad(s.month() + 1) //1-based months\n    let date = fns.zeroPad(s.date())\n    let hour = fns.zeroPad(s.h24())\n    let minute = fns.zeroPad(s.minute())\n    let second = fns.zeroPad(s.second())\n    let ms = fns.zeroPad(s.millisecond(), 3)\n    let offset = isoOffset(s)\n    return `${year}-${month}-${date}T${hour}:${minute}:${second}.${ms}${offset}` //2018-03-09T08:50:00.000-05:00\n  },\n  'iso-short': s => {\n    let month = fns.zeroPad(s.month() + 1) //1-based months\n    let date = fns.zeroPad(s.date())\n    return `${s.year()}-${month}-${date}` //2017-02-15\n  },\n  'iso-utc': s => {\n    return new Date(s.epoch).toISOString() //2017-03-08T19:45:28.367Z\n  },\n\n  //i made these up\n  nice: s => `${months.short()[s.month()]} ${fns.ordinal(s.date())}, ${s.time()}`,\n  'nice-year': s => `${months.short()[s.month()]} ${fns.ordinal(s.date())}, ${s.year()}`,\n  'nice-day': s =>\n    `${days.short()[s.day()]} ${fns.titleCase(months.short()[s.month()])} ${fns.ordinal(s.date())}`,\n  'nice-full': s =>\n    `${s.dayName()} ${fns.titleCase(s.monthName())} ${fns.ordinal(s.date())}, ${s.time()}`\n}\n//aliases\nconst aliases = {\n  'day-name': 'day',\n  'month-name': 'month',\n  'iso 8601': 'iso',\n  'time-h24': 'time-24',\n  'time-12': 'time',\n  'time-h12': 'time',\n  tz: 'timezone',\n  'day-num': 'day-number',\n  'month-num': 'month-number',\n  'month-iso': 'iso-month',\n  'year-iso': 'iso-year',\n  'nice-short': 'nice',\n  mdy: 'numeric-us',\n  dmy: 'numeric-uk',\n  ymd: 'numeric',\n  'yyyy/mm/dd': 'numeric',\n  'mm/dd/yyyy': 'numeric-us',\n  'dd/mm/yyyy': 'numeric-us',\n  'little-endian': 'numeric-uk',\n  'big-endian': 'numeric',\n  'day-nice': 'nice-day'\n}\nObject.keys(aliases).forEach(k => (format[k] = format[aliases[k]]))\n\nconst printFormat = (s, str = '') => {\n  //don't print anything if it's an invalid date\n  if (s.isValid() !== true) {\n    return ''\n  }\n  //support .format('month')\n  if (format.hasOwnProperty(str)) {\n    let out = format[str](s) || ''\n    if (str !== 'json') {\n      out = String(out)\n      if (str !== 'ampm') {\n        out = fns.titleCase(out)\n      }\n    }\n    return out\n  }\n  //support '{hour}:{minute}' notation\n  if (str.indexOf('{') !== -1) {\n    let sections = /\\{(.+?)\\}/g\n    str = str.replace(sections, (_, fmt) => {\n      fmt = fmt.toLowerCase().trim()\n      if (format.hasOwnProperty(fmt)) {\n        return String(format[fmt](s) || '')\n      }\n      return ''\n    })\n    return str\n  }\n\n  return s.format('iso-short')\n}\nmodule.exports = printFormat\n","const pad = require('../../fns').zeroPad\nconst formatTimezone = require('../../fns').formatTimezone\n//parse this insane unix-time-templating thing, from the 19th century\n//http://unicode.org/reports/tr35/tr35-25.html#Date_Format_Patterns\n\n//time-symbols we support\nconst mapping = {\n  G: s => s.era(),\n  GG: s => s.era(),\n  GGG: s => s.era(),\n  GGGG: s => (s.era() === 'AD' ? 'Anno Domini' : 'Before Christ'),\n  //year\n  y: s => s.year(),\n  yy: s => {\n    //last two chars\n    return parseInt(String(s.year()).substr(2, 4), 10)\n  },\n  yyy: s => s.year(),\n  yyyy: s => s.year(),\n  yyyyy: s => '0' + s.year(),\n  // u: (s) => {},//extended non-gregorian years\n\n  //quarter\n  Q: s => s.quarter(),\n  QQ: s => s.quarter(),\n  QQQ: s => s.quarter(),\n  QQQQ: s => s.quarter(),\n\n  //month\n  M: s => s.month() + 1,\n  MM: s => pad(s.month() + 1),\n  MMM: s => s.format('month-short'),\n  MMMM: s => s.format('month'),\n\n  //week\n  w: s => s.week(),\n  ww: s => pad(s.week()),\n  //week of month\n  // W: (s) => s.week(),\n\n  //date of month\n  d: s => s.date(),\n  dd: s => pad(s.date()),\n  //date of year\n  D: s => s.dayOfYear(),\n  DD: s => pad(s.dayOfYear()),\n  DDD: s => pad(s.dayOfYear(), 3),\n\n  // F: (s) => {},//date of week in month\n  // g: (s) => {},//modified julian day\n\n  //day\n  E: s => s.format('day-short'),\n  EE: s => s.format('day-short'),\n  EEE: s => s.format('day-short'),\n  EEEE: s => s.format('day'),\n  EEEEE: s => s.format('day')[0],\n  e: s => s.day(),\n  ee: s => s.day(),\n  eee: s => s.format('day-short'),\n  eeee: s => s.format('day'),\n  eeeee: s => s.format('day')[0],\n\n  //am/pm\n  a: s => s.ampm().toUpperCase(),\n  aa: s => s.ampm().toUpperCase(),\n  aaa: s => s.ampm().toUpperCase(),\n  aaaa: s => s.ampm().toUpperCase(),\n\n  //hour\n  h: s => s.h12(),\n  hh: s => pad(s.h12()),\n  H: s => s.hour(),\n  HH: s => pad(s.hour()),\n  // j: (s) => {},//weird hour format\n\n  m: s => s.minute(),\n  mm: s => pad(s.minute()),\n  s: s => s.second(),\n  ss: s => pad(s.second()),\n  //milliseconds in the day\n  A: s => s.epoch - s.startOf('day').epoch,\n  //timezone\n  z: s => s.timezone().name,\n  zz: s => s.timezone().name,\n  zzz: s => s.timezone().name,\n  zzzz: s => s.timezone().name,\n  Z: s => formatTimezone(s.timezone().current.offset),\n  ZZ: s => formatTimezone(s.timezone().current.offset),\n  ZZZ: s => formatTimezone(s.timezone().current.offset),\n  ZZZZ: s => formatTimezone(s.timezone().current.offset, ':')\n}\n\nconst addAlias = (char, to, n) => {\n  let name = char\n  let toName = to\n  for (let i = 0; i < n; i += 1) {\n    mapping[name] = mapping[toName]\n    name += char\n    toName += to\n  }\n}\naddAlias('q', 'Q', 4)\naddAlias('L', 'M', 4)\naddAlias('Y', 'y', 4)\naddAlias('c', 'e', 4)\naddAlias('k', 'H', 2)\naddAlias('K', 'h', 2)\naddAlias('S', 's', 2)\naddAlias('v', 'z', 4)\naddAlias('V', 'Z', 4)\n\nconst unixFmt = (s, str) => {\n  let chars = str.split('')\n  //combine consecutive chars, like 'yyyy' as one.\n  let arr = [chars[0]]\n  let quoteOn = false\n  for (let i = 1; i < chars.length; i += 1) {\n    //support quoted substrings\n    if (chars[i] === `'`) {\n      quoteOn = !quoteOn\n      //support '', meaning one tick\n      if (quoteOn === true && chars[i + 1] && chars[i + 1] === \"'\") {\n        quoteOn = true\n      } else {\n        continue\n      }\n    }\n    //merge it with the last one\n    if (quoteOn === true || chars[i] === arr[arr.length - 1][0]) {\n      arr[arr.length - 1] += chars[i]\n    } else {\n      arr.push(chars[i])\n    }\n  }\n  return arr.reduce((txt, c) => {\n    if (mapping[c] !== undefined) {\n      txt += mapping[c](s) || ''\n    } else {\n      txt += c\n    }\n    return txt\n  }, '')\n}\nmodule.exports = unixFmt\n","const fns = require('../fns')\nconst units = ['year', 'season', 'quarter', 'month', 'week', 'day', 'quarterHour', 'hour', 'minute']\n\nconst doUnit = function(s, k) {\n  let start = s.clone().startOf(k)\n  let end = s.clone().endOf(k)\n  let duration = end.epoch - start.epoch\n  let percent = (s.epoch - start.epoch) / duration\n  return parseFloat(percent.toFixed(2))\n}\n\n//how far it is along, from 0-1\nconst progress = (s, unit) => {\n  if (unit) {\n    unit = fns.normalize(unit)\n    return doUnit(s, unit)\n  }\n  let obj = {}\n  units.forEach(k => {\n    obj[k] = doUnit(s, k)\n  })\n  return obj\n}\n\nmodule.exports = progress\n","const fns = require('../fns')\n\n//round to either current, or +1 of this unit\nconst nearest = (s, unit) => {\n  //how far have we gone?\n  let prog = s.progress()\n  unit = fns.normalize(unit)\n  //fix camel-case for this one\n  if (unit === 'quarterhour') {\n    unit = 'quarterHour'\n  }\n  if (prog[unit] !== undefined) {\n    // go forward one?\n    if (prog[unit] > 0.5) {\n      s = s.add(1, unit)\n    }\n    // go to start\n    s = s.startOf(unit)\n  } else if (s.silent === false) {\n    console.warn(\"no known unit '\" + unit + \"'\")\n  }\n  return s\n}\nmodule.exports = nearest\n","//increment until dates are the same\nconst climb = (a, b, unit) => {\n  let i = 0\n  a = a.clone()\n  while (a.isBefore(b)) {\n    //do proper, expensive increment to catch all-the-tricks\n    a = a.add(1, unit)\n    i += 1\n  }\n  //oops, we went too-far..\n  if (a.isAfter(b, unit)) {\n    i -= 1\n  }\n  return i\n}\n\n// do a thurough +=1 on the unit, until they match\n// for speed-reasons, only used on day, month, week.\nconst diffOne = (a, b, unit) => {\n  if (a.isBefore(b)) {\n    return climb(a, b, unit)\n  } else {\n    return climb(b, a, unit) * -1 //reverse it\n  }\n}\n\nmodule.exports = diffOne\n","const diffOne = require('./one')\n\n// don't do anything too fancy here.\n// 2020 - 2019 may be 1 year, or 0 years\n// - '1 year difference' means 366 days during a leap year\nconst fastYear = (a, b) => {\n  let years = b.year() - a.year()\n  // should we decrement it by 1?\n  a = a.year(b.year())\n  if (a.isAfter(b)) {\n    years -= 1\n  }\n  return years\n}\n\n// use a waterfall-method for computing a diff of any 'pre-knowable' units\n// compute years, then compute months, etc..\n// ... then ms-math for any very-small units\nconst diff = function(a, b) {\n  // an hour is always the same # of milliseconds\n  // so these units can be 'pre-calculated'\n  let msDiff = b.epoch - a.epoch\n  let obj = {\n    milliseconds: msDiff,\n    seconds: parseInt(msDiff / 1000, 10)\n  }\n  obj.minutes = parseInt(obj.seconds / 60, 10)\n  obj.hours = parseInt(obj.minutes / 60, 10)\n\n  //do the year\n  let tmp = a.clone()\n  obj.years = fastYear(tmp, b)\n  tmp = a.add(obj.years, 'year')\n\n  //there's always 12 months in a year...\n  obj.months = obj.years * 12\n  tmp = a.add(obj.months, 'month')\n  obj.months += diffOne(tmp, b, 'month')\n\n  // there's always atleast 52 weeks in a year..\n  // (month * 4) isn't as close\n  obj.weeks = obj.years * 52\n  tmp = a.add(obj.weeks, 'week')\n  obj.weeks += diffOne(tmp, b, 'week')\n\n  // there's always atleast 7 days in a week\n  obj.days = obj.weeks * 7\n  tmp = a.add(obj.days, 'day')\n  obj.days += diffOne(tmp, b, 'day')\n\n  return obj\n}\nmodule.exports = diff\n","const fns = require('../../fns')\nconst waterfall = require('./waterfall')\n\nconst reverseDiff = function(obj) {\n  Object.keys(obj).forEach(k => {\n    obj[k] *= -1\n  })\n  return obj\n}\n\n// this method counts a total # of each unit, between a, b.\n// '1 month' means 28 days in february\n// '1 year' means 366 days in a leap year\nconst main = function(a, b, unit) {\n  b = fns.beADate(b, a)\n  //reverse values, if necessary\n  let reversed = false\n  if (a.isAfter(b)) {\n    let tmp = a\n    a = b\n    b = tmp\n    reversed = true\n  }\n  //compute them all (i know!)\n  let obj = waterfall(a, b)\n  if (reversed) {\n    obj = reverseDiff(obj)\n  }\n  //return just the requested unit\n  if (unit) {\n    //make sure it's plural-form\n    unit = fns.normalize(unit)\n    if (/s$/.test(unit) !== true) {\n      unit += 's'\n    }\n    if (unit === 'dates') {\n      unit = 'days'\n    }\n    return obj[unit]\n  }\n  return obj\n}\n\nmodule.exports = main\n","const fns = require('../fns')\n//by spencermountain + Shaun Grady\n\n//our conceptual 'break-points' for each unit\nconst qualifiers = {\n  months: {\n    almost: 10,\n    over: 4\n  },\n  days: {\n    almost: 25,\n    over: 10\n  },\n  hours: {\n    almost: 20,\n    over: 8\n  },\n  minutes: {\n    almost: 50,\n    over: 20\n  },\n  seconds: {\n    almost: 50,\n    over: 20\n  }\n}\n\n//get number of hours/minutes... between the two dates\nfunction getDiff(a, b) {\n  const isBefore = a.isBefore(b)\n  const later = isBefore ? b : a\n  let earlier = isBefore ? a : b\n  earlier = earlier.clone()\n  const diff = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  }\n  Object.keys(diff).forEach(unit => {\n    if (earlier.isSame(later, unit)) {\n      return\n    }\n    let max = earlier.diff(later, unit)\n    earlier = earlier.add(max, unit)\n    diff[unit] = max\n  })\n\n  //reverse it, if necessary\n  if (isBefore) {\n    Object.keys(diff).forEach(u => {\n      if (diff[u] !== 0) {\n        diff[u] *= -1\n      }\n    })\n  }\n  return diff\n}\n\n// Expects a plural unit arg\nfunction pluralize(value, unit) {\n  if (value === 1) {\n    unit = unit.slice(0, -1)\n  }\n  return value + ' ' + unit\n}\n\n//create the human-readable diff between the two dates\nconst since = (start, end) => {\n  end = fns.beADate(end, start)\n  const diff = getDiff(start, end)\n  const isNow = Object.keys(diff).every(u => !diff[u])\n  if (isNow === true) {\n    return {\n      diff,\n      rounded: 'now',\n      qualified: 'now',\n      precise: 'now'\n    }\n  }\n  let rounded\n  let qualified\n  let precise\n  let englishValues = []\n\n  //go through each value and create its text-representation\n  Object.keys(diff).forEach((unit, i, units) => {\n    const value = Math.abs(diff[unit])\n    if (value === 0) {\n      return\n    }\n    const englishValue = pluralize(value, unit)\n    englishValues.push(englishValue)\n    if (!rounded) {\n      rounded = qualified = englishValue\n      if (i > 4) {\n        return\n      }\n      //is it a 'almost' something, etc?\n      const nextUnit = units[i + 1]\n      const nextValue = Math.abs(diff[nextUnit])\n      if (nextValue > qualifiers[nextUnit].almost) {\n        rounded = pluralize(value + 1, unit)\n        qualified = 'almost ' + rounded\n      } else if (nextValue > qualifiers[nextUnit].over) qualified = 'over ' + englishValue\n    }\n  })\n  //make them into a string\n  precise = englishValues.splice(0, 2).join(', ')\n  //handle before/after logic\n  if (start.isAfter(end) === true) {\n    rounded += ' ago'\n    qualified += ' ago'\n    precise += ' ago'\n  } else {\n    rounded = 'in ' + rounded\n    qualified = 'in ' + qualified\n    precise = 'in ' + precise\n  }\n  return {\n    diff,\n    rounded,\n    qualified,\n    precise\n  }\n}\n\nmodule.exports = since\n","//https://www.timeanddate.com/calendar/aboutseasons.html\n// Spring - from March 1 to May 31;\n// Summer - from June 1 to August 31;\n// Fall (autumn) - from September 1 to November 30; and,\n// Winter - from December 1 to February 28 (February 29 in a leap year).\nmodule.exports = {\n  north: [\n    ['spring', 2, 1], //spring march 1\n    ['summer', 5, 1], //june 1\n    ['fall', 8, 1], //sept 1\n    ['autumn', 8, 1], //sept 1\n    ['winter', 11, 1] //dec 1\n  ],\n  south: [\n    ['fall', 2, 1], //march 1\n    ['autumn', 2, 1], //march 1\n    ['winter', 5, 1], //june 1\n    ['spring', 8, 1], //sept 1\n    ['summer', 11, 1] //dec 1\n  ]\n}\n","module.exports = [\n  null,\n  [0, 1], //jan 1\n  [3, 1], //apr 1\n  [6, 1], //july 1\n  [9, 1] //oct 1\n]\n","const seasons = require('../data/seasons')\nconst quarters = require('../data/quarters')\nconst walkTo = require('./set/walk')\nconst fns = require('../fns')\n\nconst units = {\n  minute: s => {\n    walkTo(s, {\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  quarterhour: s => {\n    let minute = s.minutes()\n    if (minute >= 45) {\n      s = s.minutes(45)\n    } else if (minute >= 30) {\n      s = s.minutes(30)\n    } else if (minute >= 15) {\n      s = s.minutes(15)\n    } else {\n      s = s.minutes(0)\n    }\n    walkTo(s, {\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  hour: s => {\n    walkTo(s, {\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  day: s => {\n    walkTo(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  week: s => {\n    let original = s.clone()\n    s = s.day(s._weekStart) //monday\n    if (s.isAfter(original)) {\n      s = s.subtract(1, 'week')\n    }\n    walkTo(s, {\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  month: s => {\n    walkTo(s, {\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  quarter: s => {\n    let q = s.quarter()\n    if (quarters[q]) {\n      walkTo(s, {\n        month: quarters[q][0],\n        date: quarters[q][1],\n        hour: 0,\n        minute: 0,\n        second: 0,\n        millisecond: 0\n      })\n    }\n    return s\n  },\n  season: s => {\n    let current = s.season()\n    let hem = 'north'\n    if (s.hemisphere() === 'South') {\n      hem = 'south'\n    }\n    for (let i = 0; i < seasons[hem].length; i++) {\n      if (seasons[hem][i][0] === current) {\n        //winter goes between years\n        let year = s.year()\n        if (current === 'winter' && s.month() < 3) {\n          year -= 1\n        }\n        walkTo(s, {\n          year,\n          month: seasons[hem][i][1],\n          date: seasons[hem][i][2],\n          hour: 0,\n          minute: 0,\n          second: 0,\n          millisecond: 0\n        })\n        return s\n      }\n    }\n    return s\n  },\n  year: s => {\n    walkTo(s, {\n      month: 0,\n      date: 1,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0\n    })\n    return s\n  },\n  decade: s => {\n    s = s.startOf('year')\n    let year = s.year()\n    let decade = parseInt(year / 10, 10) * 10\n    s = s.year(decade)\n    return s\n  },\n  century: s => {\n    s = s.startOf('year')\n    let year = s.year()\n    // near 0AD goes '-1 | +1'\n    let decade = parseInt(year / 100, 10) * 100\n    s = s.year(decade)\n    return s\n  }\n}\nunits.date = units.day\n\nconst startOf = (a, unit) => {\n  let s = a.clone()\n  unit = fns.normalize(unit)\n  if (units[unit]) {\n    return units[unit](s)\n  }\n  if (unit === 'summer' || unit === 'winter') {\n    s = s.season(unit)\n    return units.season(s)\n  }\n  return s\n}\n\n//piggy-backs off startOf\nconst endOf = (a, unit) => {\n  let s = a.clone()\n  unit = fns.normalize(unit)\n  if (units[unit]) {\n    s = units[unit](s)\n    s = s.add(1, unit)\n    s = s.subtract(1, 'milliseconds')\n    return s\n  }\n  return s\n}\nmodule.exports = {\n  startOf,\n  endOf\n}\n","const fns = require('../fns')\nconst days = require('../data/days')\n\n//is it 'wednesday'?\nconst isDay = function(unit) {\n  if (days.short().find(s => s === unit)) {\n    return true\n  }\n  if (days.long().find(s => s === unit)) {\n    return true\n  }\n  return false\n}\n\n// return a list of the weeks/months/days between a -> b\n// returns spacetime objects in the timezone of the input\nconst every = function(start, unit = '', end) {\n  if (!unit || !end) {\n    return []\n  }\n  //cleanup unit param\n  unit = fns.normalize(unit)\n  //cleanup to param\n  end = start.clone().set(end)\n  //swap them, if they're backwards\n  if (start.isAfter(end)) {\n    let tmp = start\n    start = end\n    end = tmp\n  }\n\n  //support 'every wednesday'\n  let d = start.clone()\n  if (isDay(unit)) {\n    d = d.next(unit)\n    unit = 'week'\n  } else {\n    d = d.next(unit)\n  }\n  //okay, actually start doing it\n  let result = []\n  while (d.isBefore(end)) {\n    result.push(d)\n    d = d.add(1, unit)\n  }\n  return result\n}\nmodule.exports = every\n","const findTz = require('./find')\nconst inSummerTime = require('./summerTime')\n\nconst parseDst = dst => {\n  if (!dst) {\n    return []\n  }\n  return dst.split('->')\n}\n\nconst titleCase = str => {\n  str = str[0].toUpperCase() + str.substr(1)\n  str = str.replace(/\\/gmt/, '/GMT')\n  str = str.replace(/[\\/_]([a-z])/gi, s => {\n    return s.toUpperCase()\n  })\n  return str\n}\n\n//get metadata about this timezone\nconst timezone = s => {\n  let zones = s.timezones\n  let tz = s.tz\n  if (zones.hasOwnProperty(tz) === false) {\n    tz = findTz(s.tz, zones)\n  }\n  if (tz === null) {\n    if (s.silent === false) {\n      console.warn(\"Warn: could not find given or local timezone - '\" + s.tz + \"'\")\n    }\n    return {\n      current: {\n        epochShift: 0\n      }\n    }\n  }\n  let found = zones[tz]\n  let result = {\n    name: titleCase(tz),\n    hasDst: Boolean(found.dst),\n    default_offset: found.offset,\n    //do north-hemisphere version as default (sorry!)\n    hemisphere: found.hem === 's' ? 'South' : 'North',\n    current: {}\n  }\n\n  if (result.hasDst) {\n    let arr = parseDst(found.dst)\n    result.change = {\n      start: arr[0],\n      back: arr[1]\n    }\n  }\n  //find the offsets for summer/winter times\n  //(these variable names are north-centric)\n  let summer = found.offset // (july)\n  let winter = summer // (january) assume it's the same for now\n  if (result.hasDst === true) {\n    if (result.hemisphere === 'North') {\n      winter = summer - 1\n    } else {\n      //southern hemisphere\n      winter = found.offset + 1\n    }\n  }\n\n  //find out which offset to use right now\n  //use 'summer' time july-time\n  if (result.hasDst === false) {\n    result.current.offset = summer\n    result.current.isDST = false\n  } else if (inSummerTime(s.epoch, result.change.start, result.change.back, summer) === true) {\n    result.current.offset = summer\n    result.current.isDST = result.hemisphere === 'North' //dst 'on' in winter in north\n  } else {\n    //use 'winter' january-time\n    result.current.offset = winter\n    result.current.isDST = result.hemisphere === 'South' //dst 'on' in summer in south\n  }\n  return result\n}\nmodule.exports = timezone\n","const format = require('./methods/format')\nconst unixFmt = require('./methods/format/unixFmt')\nconst progress = require('./methods/progress')\nconst nearest = require('./methods/nearest')\nconst diff = require('./methods/diff')\nconst since = require('./methods/since')\nconst ends = require('./methods/startOf')\nconst every = require('./methods/every')\nconst timezone = require('./timezone/index')\nconst findTz = require('./timezone/find')\nconst handleInput = require('./input')\nconst fns = require('./fns')\nconst days = require('./data/days')\nconst units = [\n  'century',\n  'decade',\n  'year',\n  'month',\n  'date',\n  'day',\n  'hour',\n  'minute',\n  'second',\n  'millisecond'\n]\n\n//the spacetime instance methods (also, the API)\nconst methods = {\n  set: function(input, tz) {\n    let s = this.clone()\n    s = handleInput(s, input)\n    if (tz) {\n      this.tz = findTz(tz)\n    }\n    return s\n  },\n  timezone: function() {\n    return timezone(this)\n  },\n  isDST: function() {\n    return timezone(this).current.isDST\n  },\n  hasDST: function() {\n    return timezone(this).hasDst\n  },\n  offset: function() {\n    return timezone(this).current.offset * 60\n  },\n  hemisphere: function() {\n    return timezone(this).hemisphere\n  },\n  format: function(fmt) {\n    return format(this, fmt)\n  },\n  unixFmt: function(fmt) {\n    return unixFmt(this, fmt)\n  },\n  startOf: function(unit) {\n    return ends.startOf(this, unit)\n  },\n  endOf: function(unit) {\n    return ends.endOf(this, unit)\n  },\n  leapYear: function() {\n    let year = this.year()\n    return fns.isLeapYear(year)\n  },\n  progress: function(unit) {\n    return progress(this, unit)\n  },\n  nearest: function(unit) {\n    return nearest(this, unit)\n  },\n  diff: function(d, unit) {\n    return diff(this, d, unit)\n  },\n  since: function(d) {\n    if (!d) {\n      d = this.clone().set()\n    }\n    return since(this, d)\n  },\n  next: function(unit) {\n    let s = this.add(1, unit)\n    return s.startOf(unit)\n  },\n  //the start of the previous year/week/century\n  last: function(unit) {\n    let s = this.subtract(1, unit)\n    return s.startOf(unit)\n  },\n  isValid: function() {\n    //null/undefined epochs\n    if (!this.epoch && this.epoch !== 0) {\n      return false\n    }\n    return !isNaN(this.d.getTime())\n  },\n  //travel to this timezone\n  goto: function(tz) {\n    let s = this.clone()\n    s.tz = findTz(tz, s.timezones) //science!\n    return s\n  },\n  //get each week/month/day between a -> b\n  every: function(unit, to) {\n    return every(this, unit, to)\n  },\n  isAwake: function() {\n    let hour = this.hour()\n    //10pm -> 8am\n    if (hour < 8 || hour > 22) {\n      return false\n    }\n    return true\n  },\n  isAsleep: function() {\n    return !this.isAwake()\n  },\n  //pretty-printing\n  log: function() {\n    console.log('')\n    console.log(format(this, 'nice-short'))\n    return this\n  },\n  logYear: function() {\n    console.log('')\n    console.log(format(this, 'full-short'))\n    return this\n  },\n  json: function() {\n    return units.reduce((h, unit) => {\n      h[unit] = this[unit]()\n      return h\n    }, {})\n  },\n  debug: function() {\n    let tz = this.timezone()\n    let date = this.format('MM') + ' ' + this.format('date-ordinal') + ' ' + this.year()\n    date += '\\n     - ' + this.format('time')\n    console.log('\\n\\n', date + '\\n     - ' + tz.name + ' (' + tz.current.offset + ')')\n    return this\n  },\n  //alias of 'since' but opposite - like moment.js\n  from: function(d) {\n    d = this.clone().set(d)\n    return d.since(this)\n  },\n  fromNow: function() {\n    let d = this.clone().set(Date.now())\n    return d.since(this)\n  },\n  weekStart: function(input) {\n    //accept a number directly\n    if (typeof input === 'number') {\n      this._weekStart = input\n      return this\n    }\n    if (typeof input === 'string') {\n      // accept 'wednesday'\n      input = input.toLowerCase().trim()\n      let num = days.short().indexOf(input)\n      if (num === -1) {\n        num = days.long().indexOf(input)\n      }\n      if (num === -1) {\n        num = 1 //go back to default\n      }\n      this._weekStart = num\n    } else {\n      console.warn('Spacetime Error: Cannot understand .weekStart() input:', input)\n    }\n    return this\n  }\n}\n// aliases\nmethods.inDST = methods.isDST\nmethods.round = methods.nearest\nmethods.each = methods.every\nmodule.exports = methods\n","// javascript setX methods like setDate() can't be used because of the local bias\n//these methods wrap around them.\nconst ms = require('../../data/milliseconds')\nconst months = require('../../data/months')\nconst monthLength = require('../../data/monthLengths')\nconst walkTo = require('./walk')\n\nconst validate = n => {\n  //handle number as a string\n  if (typeof n === 'string') {\n    n = parseInt(n, 10)\n  }\n  return n\n}\n\nconst order = ['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond']\n\n//reduce hostile micro-changes when moving dates by millisecond\nconst confirm = (s, tmp, unit) => {\n  let n = order.indexOf(unit)\n  let arr = order.slice(n, order.length)\n  for (let i = 0; i < arr.length; i++) {\n    let want = tmp[arr[i]]()\n    s[arr[i]](want)\n  }\n  return s\n}\n\nmodule.exports = {\n  milliseconds: (s, n) => {\n    n = validate(n)\n    let current = s.millisecond()\n    let diff = current - n //milliseconds to shift by\n    return s.epoch - diff\n  },\n\n  seconds: (s, n) => {\n    n = validate(n)\n    let diff = s.second() - n\n    let shift = diff * ms.second\n    return s.epoch - shift\n  },\n\n  minutes: (s, n) => {\n    n = validate(n)\n    let old = s.clone()\n    let diff = s.minute() - n\n    let shift = diff * ms.minute\n    s.epoch -= shift\n    confirm(s, old, 'second')\n    return s.epoch\n  },\n\n  hours: (s, n) => {\n    n = validate(n)\n    if (n >= 24) {\n      n = 24\n    } else if (n < 0) {\n      n = 0\n    }\n    let old = s.clone()\n    let diff = s.hour() - n\n    let shift = diff * ms.hour\n    s.epoch -= shift\n    walkTo(s, {\n      hour: n\n    })\n    confirm(s, old, 'minute')\n    return s.epoch\n  },\n\n  //support setting time by '4:25pm' - this isn't very-well developed..\n  time: (s, str) => {\n    let m = str.match(/([0-9]{1,2}):([0-9]{1,2})(am|pm)?/)\n    if (!m) {\n      //fallback to support just '2am'\n      m = str.match(/([0-9]{1,2})(am|pm)/)\n      if (!m) {\n        return s.epoch\n      }\n      m.splice(2, 0, '0') //add implicit 0 minutes\n    }\n    let h24 = false\n    let hour = parseInt(m[1], 10)\n    let minute = parseInt(m[2], 10)\n    if (hour > 12) {\n      h24 = true\n    }\n    //make the hour into proper 24h time\n    if (h24 === false) {\n      if (m[3] === 'am' && hour === 12) {\n        //12am is midnight\n        hour = 0\n      }\n      if (m[3] === 'pm' && hour < 12) {\n        //12pm is noon\n        hour += 12\n      }\n    }\n    s = s.hour(hour)\n    s = s.minute(minute)\n    s = s.second(0)\n    s = s.millisecond(0)\n    return s.epoch\n  },\n\n  date: (s, n) => {\n    n = validate(n)\n    //avoid setting february 31st\n    if (n > 28) {\n      const max = monthLength[s.month()]\n      if (n > max) {\n        n = max\n      }\n    }\n    //avoid setting < 0\n    if (n <= 0) {\n      n = 1\n    }\n    walkTo(s, {\n      date: n\n    })\n    return s.epoch\n  },\n\n  //this one's tricky\n  month: (s, n) => {\n    if (typeof n === 'string') {\n      n = months.mapping()[n.toLowerCase()]\n    }\n    n = validate(n)\n    //don't go past december\n    if (n >= 12) {\n      n = 11\n    }\n    if (n <= 0) {\n      n = 0\n    }\n\n    let date = s.date()\n    //there's no 30th of february, etc.\n    if (date > monthLength[n]) {\n      //make it as close as we can..\n      date = monthLength[n]\n    }\n    walkTo(s, {\n      month: n,\n      date\n    })\n    return s.epoch\n  },\n\n  year: (s, n) => {\n    n = validate(n)\n    walkTo(s, {\n      year: n\n    })\n    return s.epoch\n  },\n\n  dayOfYear: (s, n) => {\n    n = validate(n)\n    let old = s.clone()\n    n -= 1 //days are 1-based\n    if (n <= 0) {\n      n = 0\n    } else if (n >= 365) {\n      n = 364\n    }\n    s = s.startOf('year')\n    s = s.add(n, 'day')\n    confirm(s, old, 'hour')\n    return s.epoch\n  }\n}\n","const set = require('../set/set')\nconst fns = require('../../fns')\n\nconst methods = {\n  millisecond: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.milliseconds(s, num)\n      return s\n    }\n    return this.d.getMilliseconds()\n  },\n  second: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.seconds(s, num)\n      return s\n    }\n    return this.d.getSeconds()\n  },\n  minute: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.minutes(s, num)\n      return s\n    }\n    return this.d.getMinutes()\n  },\n  hour: function(num) {\n    let d = this.d\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.hours(s, num)\n      return s\n    }\n    return d.getHours()\n  },\n\n  //'3:30' is 3.5\n  hourFloat: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      let minute = num % 1\n      minute = minute * 60\n      let hour = parseInt(num, 10)\n      s.epoch = set.hours(s, hour)\n      s.epoch = set.minutes(s, minute)\n      return s\n    }\n    let d = this.d\n    let hour = d.getHours()\n    let minute = d.getMinutes()\n    minute = minute / 60\n    return hour + minute\n  },\n\n  // hour in 12h format\n  hour12: function(str) {\n    let d = this.d\n    if (str !== undefined) {\n      let s = this.clone()\n      str = '' + str\n      let m = str.match(/^([0-9]+)(am|pm)$/)\n      if (m) {\n        let hour = parseInt(m[1], 10)\n        if (m[2] === 'pm') {\n          hour += 12\n        }\n        s.epoch = set.hours(s, hour)\n      }\n      return s\n    }\n    //get the hour\n    let hour12 = d.getHours()\n    if (hour12 > 12) {\n      hour12 = hour12 - 12\n    }\n    if (hour12 === 0) {\n      hour12 = 12\n    }\n    return hour12\n  },\n\n  //some ambiguity here with 12/24h\n  time: function(str) {\n    if (str !== undefined) {\n      let s = this.clone()\n      s.epoch = set.time(s, str)\n      return s\n    }\n    return `${this.h12()}:${fns.zeroPad(this.minute())}${this.ampm()}`\n  },\n\n  // either 'am' or 'pm'\n  ampm: function(input) {\n    let which = 'am'\n    let hour = this.hour()\n    if (hour >= 12) {\n      which = 'pm'\n    }\n    if (typeof input !== 'string') {\n      return which\n    }\n    //okay, we're doing a setter\n    let s = this.clone()\n    input = input.toLowerCase().trim()\n    //ampm should never change the day\n    // - so use `.hour(n)` instead of `.minus(12,'hour')`\n    if (hour >= 12 && input === 'am') {\n      //noon is 12pm\n      hour -= 12\n      return s.hour(hour)\n    }\n    if (hour < 12 && input === 'pm') {\n      hour += 12\n      return s.hour(hour)\n    }\n    return s\n  },\n\n  //some hard-coded times of day, like 'noon'\n  dayTime: function(str) {\n    if (str !== undefined) {\n      const times = {\n        morning: '7:00am',\n        breakfast: '7:00am',\n        noon: '12:00am',\n        lunch: '12:00pm',\n        afternoon: '2:00pm',\n        evening: '6:00pm',\n        dinner: '6:00pm',\n        night: '11:00pm',\n        midnight: '23:59pm'\n      }\n      let s = this.clone()\n      str = str || ''\n      str = str.toLowerCase()\n      if (times.hasOwnProperty(str) === true) {\n        s = s.time(times[str])\n      }\n      return s\n    }\n    let h = this.hour()\n    if (h < 6) {\n      return 'night'\n    }\n    if (h < 12) {\n      //until noon\n      return 'morning'\n    }\n    if (h < 17) {\n      //until 5pm\n      return 'afternoon'\n    }\n    if (h < 22) {\n      //until 10pm\n      return 'evening'\n    }\n    return 'night'\n  },\n\n  //parse a proper iso string\n  iso: function(num) {\n    if (num !== undefined) {\n      return this.set(num)\n    }\n    return this.format('iso')\n  }\n}\nmodule.exports = methods\n","const set = require('../set/set')\nconst days = require('../../data/days')\nconst walkTo = require('../set/walk')\n\nconst methods = {\n  // # day in the month\n  date: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.date(s, num)\n      return s\n    }\n    return this.d.getDate()\n  },\n\n  //like 'wednesday' (hard!)\n  day: function(input) {\n    if (input === undefined) {\n      return this.d.getDay()\n    }\n    let original = this.clone()\n    let want = input\n    // accept 'wednesday'\n    if (typeof input === 'string') {\n      input = input.toLowerCase()\n      want = days.short().indexOf(input)\n      if (want === -1) {\n        want = days.long().indexOf(input)\n      }\n    }\n    //move approx\n    let day = this.d.getDay()\n    let diff = day - want\n    let s = this.subtract(diff * 24, 'hours')\n    //tighten it back up\n    walkTo(s, {\n      hour: original.hour(),\n      minute: original.minute(),\n      second: original.second()\n    })\n    return s\n  },\n\n  //these are helpful name-wrappers\n  dayName: function(input) {\n    if (input === undefined) {\n      return days.long()[this.day()]\n    }\n    let s = this.clone()\n    s = s.day(input)\n    return s\n  },\n\n  //either name or number\n  month: function(input) {\n    if (input !== undefined) {\n      let s = this.clone()\n      s.epoch = set.month(s, input)\n      return s\n    }\n    return this.d.getMonth()\n  }\n}\nmodule.exports = methods\n","const set = require('../set/set')\nconst months = require('../../data/months')\nconst quarters = require('../../data/quarters')\nconst seasons = require('../../data/seasons')\nconst ms = require('../../data/milliseconds')\n\nconst clearMinutes = s => {\n  s = s.minute(0)\n  s = s.second(0)\n  s = s.millisecond(1)\n  return s\n}\n\nconst methods = {\n  // day 0-366\n  dayOfYear: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.dayOfYear(s, num)\n      return s\n    }\n    //days since newyears - jan 1st is 1, jan 2nd is 2...\n    let sum = 0\n    let month = this.d.getMonth()\n    let tmp\n    //count the num days in each month\n    for (let i = 1; i <= month; i++) {\n      tmp = new Date()\n      tmp.setDate(1)\n      tmp.setFullYear(this.d.getFullYear()) //the year matters, because leap-years\n      tmp.setHours(1)\n      tmp.setMinutes(1)\n      tmp.setMonth(i)\n      tmp.setHours(-2) //the last day of the month\n      sum += tmp.getDate()\n    }\n    return sum + this.d.getDate()\n  },\n\n  //since the start of the year\n  week: function(num) {\n    // week-setter\n    if (num !== undefined) {\n      let s = this.clone()\n      s = s.month(0)\n      s = s.date(1)\n      s = s.day('monday')\n      s = clearMinutes(s)\n      //don't go into last-year\n      if (s.monthName() === 'december') {\n        s = s.add(1, 'week')\n      }\n      num -= 1 //1-based\n      s = s.add(num, 'weeks')\n      return s\n    }\n    //find-out which week it is\n    let tmp = this.clone()\n    tmp = tmp.month(0)\n    tmp = tmp.date(1)\n    tmp = clearMinutes(tmp)\n    tmp = tmp.day('monday')\n    //don't go into last-year\n    if (tmp.monthName() === 'december') {\n      tmp = tmp.add(1, 'week')\n    }\n    // is first monday the 1st?\n    let toAdd = 1\n    if (tmp.date() === 1) {\n      toAdd = 0\n    }\n    tmp = tmp.minus(1, 'second')\n    const thisOne = this.epoch\n    //if the week technically hasn't started yet\n    if (tmp.epoch > thisOne) {\n      return 1\n    }\n    //speed it up, if we can\n    let i = 0\n    let skipWeeks = this.month() * 4\n    tmp.epoch += ms.week * skipWeeks\n    i += skipWeeks\n    for (; i < 52; i++) {\n      if (tmp.epoch > thisOne) {\n        return i + toAdd\n      }\n      tmp = tmp.add(1, 'week')\n    }\n    return 52\n  },\n\n  //'january'\n  monthName: function(input) {\n    if (input === undefined) {\n      return months.long()[this.month()]\n    }\n    let s = this.clone()\n    s = s.month(input)\n    return s\n  },\n\n  //q1, q2, q3, q4\n  quarter: function(num) {\n    if (num !== undefined) {\n      if (typeof num === 'string') {\n        num = num.replace(/^q/i, '')\n        num = parseInt(num, 10)\n      }\n      if (quarters[num]) {\n        let s = this.clone()\n        let month = quarters[num][0]\n        s = s.month(month)\n        s = s.date(1)\n        s = s.startOf('day')\n        return s\n      }\n    }\n    let month = this.d.getMonth()\n    for (let i = 1; i < quarters.length; i++) {\n      if (month < quarters[i][0]) {\n        return i - 1\n      }\n    }\n    return 4\n  },\n\n  //spring, summer, winter, fall\n  season: function(input) {\n    let hem = 'north'\n    if (this.hemisphere() === 'South') {\n      hem = 'south'\n    }\n    if (input !== undefined) {\n      let s = this.clone()\n      for (let i = 0; i < seasons[hem].length; i++) {\n        if (input === seasons[hem][i][0]) {\n          s = s.month(seasons[hem][i][1])\n          s = s.date(1)\n          s = s.startOf('day')\n        }\n      }\n      return s\n    }\n    let month = this.d.getMonth()\n    for (let i = 0; i < seasons[hem].length - 1; i++) {\n      if (month >= seasons[hem][i][1] && month < seasons[hem][i + 1][1]) {\n        return seasons[hem][i][0]\n      }\n    }\n    return 'winter'\n  },\n\n  //the year number\n  year: function(num) {\n    if (num !== undefined) {\n      let s = this.clone()\n      s.epoch = set.year(s, num)\n      return s\n    }\n    return this.d.getFullYear()\n  },\n\n  //bc/ad years\n  era: function(str) {\n    if (str !== undefined) {\n      let s = this.clone()\n      str = str.toLowerCase()\n      //TODO: there is no year-0AD i think. may have off-by-1 error here\n      let year = s.d.getFullYear()\n      //make '1992' into 1992bc..\n      if (str === 'bc' && year > 0) {\n        s.epoch = set.year(s, year * -1)\n      }\n      //make '1992bc' into '1992'\n      if (str === 'ad' && year < 0) {\n        s.epoch = set.year(s, year * -1)\n      }\n      return s\n    }\n    if (this.d.getFullYear() < 0) {\n      return 'BC'\n    }\n    return 'AD'\n  },\n\n  // 2019 -> 2010\n  decade: function(input) {\n    if (input !== undefined) {\n      input = String(input)\n      input = input.replace(/([0-9])'?s$/, '$1') //1950's\n      input = input.replace(/([0-9])(th|rd|st|nd)/, '$1') //fix ordinals\n      if (!input) {\n        console.warn('Spacetime: Invalid decade input')\n        return this\n      }\n      // assume 20th century?? for '70s'.\n      if (input.length === 2 && /[0-9][0-9]/.test(input)) {\n        input = '19' + input\n      }\n      let year = Number(input)\n      if (isNaN(year)) {\n        return this\n      }\n      // round it down to the decade\n      year = Math.floor(year / 10) * 10\n      return this.year(year) //.startOf('decade')\n    }\n    return this.startOf('decade').year()\n  },\n  // 1950 -> 19+1\n  century: function(input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1') //fix ordinals\n        input = input.replace(/([0-9]+) ?(b\\.?c\\.?|a\\.?d\\.?)/i, (a, b, c) => {\n          if (c.match(/b\\.?c\\.?/i)) {\n            b = '-' + b\n          }\n          return b\n        })\n        input = input.replace(/c$/, '') //20thC\n      }\n      let year = Number(input)\n      if (isNaN(input)) {\n        console.warn('Spacetime: Invalid century input')\n        return this\n      }\n      // there is no century 0\n      if (year === 0) {\n        year = 1\n      }\n      if (year >= 0) {\n        year = (year - 1) * 100\n      } else {\n        year = (year + 1) * 100\n      }\n      return this.year(year)\n    }\n    // century getter\n    let num = this.startOf('century').year()\n    num = Math.floor(num / 100)\n    if (num < 0) {\n      return num - 1\n    }\n    return num + 1\n  },\n  // 2019 -> 2+1\n  millenium: function(input) {\n    if (input !== undefined) {\n      if (typeof input === 'string') {\n        input = input.replace(/([0-9])(th|rd|st|nd)/, '$1') //fix ordinals\n        input = Number(input)\n        if (isNaN(input)) {\n          console.warn('Spacetime: Invalid millenium input')\n          return this\n        }\n      }\n      if (input > 0) {\n        input -= 1\n      }\n      let year = input * 1000\n      // there is no year 0\n      if (year === 0) {\n        year = 1\n      }\n      return this.year(year)\n    }\n    // get the current millenium\n    let num = Math.floor(this.year() / 1000)\n    if (num >= 0) {\n      num += 1\n    }\n    return num\n  }\n}\nmodule.exports = methods\n","const methods = Object.assign({}, require('./01-time'), require('./02-date'), require('./03-year'))\n\n//aliases\nmethods.milliseconds = methods.millisecond\nmethods.seconds = methods.second\nmethods.minutes = methods.minute\nmethods.hours = methods.hour\nmethods.hour24 = methods.hour\nmethods.h12 = methods.hour12\nmethods.h24 = methods.hour24\nmethods.days = methods.day\n\nconst addMethods = Space => {\n  //hook the methods into prototype\n  Object.keys(methods).forEach(k => {\n    Space.prototype[k] = methods[k]\n  })\n}\n\nmodule.exports = addMethods\n","const walkTo = require('./set/walk')\nconst ms = require('../data/milliseconds')\nconst monthLength = require('../data/monthLengths')\nconst fns = require('../fns')\n\nconst order = ['millisecond', 'second', 'minute', 'hour', 'date', 'month']\nlet keep = {\n  second: order.slice(0, 1),\n  minute: order.slice(0, 2),\n  quarterhour: order.slice(0, 2),\n  hour: order.slice(0, 3),\n  date: order.slice(0, 4),\n  month: order.slice(0, 4),\n  quarter: order.slice(0, 4),\n  season: order.slice(0, 4),\n  year: order,\n  decade: order,\n  century: order\n}\nkeep.week = keep.hour\nkeep.season = keep.date\nkeep.quarter = keep.date\n\n// Units need to be dst adjuested\nconst dstAwareUnits = {\n  year: true,\n  quarter: true,\n  season: true,\n  month: true,\n  week: true,\n  day: true\n}\n\nconst keepDate = {\n  month: true,\n  quarter: true,\n  season: true,\n  year: true\n}\n//month is the only thing we 'model/compute'\n//- because ms-shifting can be off by enough\nconst rollMonth = (want, old) => {\n  //increment year\n  if (want.month > 0) {\n    let years = parseInt(want.month / 12, 10)\n    want.year = old.year() + years\n    want.month = want.month % 12\n  } else if (want.month < 0) {\n    //decrement year\n    let years = Math.floor(Math.abs(want.month) / 13, 10)\n    years = Math.abs(years) + 1\n    want.year = old.year() - years\n    //ignore extras\n    want.month = want.month % 12\n    want.month = want.month + 12\n    if (want.month === 12) {\n      want.month = 0\n    }\n  }\n  return want\n}\n\nconst addMethods = SpaceTime => {\n  SpaceTime.prototype.add = function(num, unit) {\n    let s = this.clone()\n    if (!unit || num === 0) {\n      return s //don't bother\n    }\n    let old = this.clone()\n    unit = fns.normalize(unit)\n    //move forward by the estimated milliseconds (rough)\n    if (ms[unit]) {\n      s.epoch += ms[unit] * num\n    } else if (unit === 'week') {\n      s.epoch += ms.day * (num * 7)\n    } else if (unit === 'quarter' || unit === 'season') {\n      s.epoch += ms.month * (num * 4)\n    } else if (unit === 'season') {\n      s.epoch += ms.month * (num * 4)\n    } else if (unit === 'quarterhour') {\n      s.epoch += ms.minute * 15 * num\n    }\n    //now ensure our milliseconds/etc are in-line\n    let want = {}\n    if (keep[unit]) {\n      keep[unit].forEach(u => {\n        want[u] = old[u]()\n      })\n    }\n\n    if (dstAwareUnits[unit]) {\n      const diff = old.timezone().current.offset - s.timezone().current.offset\n      s.epoch += diff * 3600 * 1000\n    }\n\n    //ensure month/year has ticked-over\n    if (unit === 'month') {\n      want.month = old.month() + num\n      //month is the one unit we 'model' directly\n      want = rollMonth(want, old)\n    }\n    //support coercing a week, too\n    if (unit === 'week') {\n      let sum = old.date() + num * 7\n      if (sum <= 28 && sum > 1) {\n        want.date = sum\n      }\n    }\n    //support 25-hour day-changes on dst-changes\n    else if (unit === 'date') {\n      //specify a naive date number, if it's easy to do...\n      let sum = old.date() + num\n      if (sum <= 28 && sum > 1) {\n        want.date = sum\n      }\n      //or if we haven't moved at all..\n      else if (num !== 0 && old.isSame(s, 'day')) {\n        want.date = old.date() + num\n      }\n    }\n    //ensure year has changed (leap-years)\n    else if (unit === 'year' && s.year() === old.year()) {\n      s.epoch += ms.week\n    }\n    //these are easier\n    else if (unit === 'decade') {\n      want.year = s.year() + 10\n    } else if (unit === 'century') {\n      want.year = s.year() + 100\n    }\n    //keep current date, unless the month doesn't have it.\n    if (keepDate[unit]) {\n      let max = monthLength[want.month]\n      want.date = old.date()\n      if (want.date > max) {\n        want.date = max\n      }\n    }\n    walkTo(s, want)\n    return s\n  }\n\n  //subtract is only add *-1\n  SpaceTime.prototype.subtract = function(num, unit) {\n    let s = this.clone()\n    return s.add(num * -1, unit)\n  }\n  //add aliases\n  SpaceTime.prototype.minus = SpaceTime.prototype.subtract\n  SpaceTime.prototype.plus = SpaceTime.prototype.add\n}\n\nmodule.exports = addMethods\n","//make a string, for easy comparison between dates\nconst print = {\n  millisecond: s => {\n    return s.epoch\n  },\n  second: s => {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute(), s.second()].join('-')\n  },\n  minute: s => {\n    return [s.year(), s.month(), s.date(), s.hour(), s.minute()].join('-')\n  },\n  hour: s => {\n    return [s.year(), s.month(), s.date(), s.hour()].join('-')\n  },\n  day: s => {\n    return [s.year(), s.month(), s.date()].join('-')\n  },\n  week: s => {\n    return [s.year(), s.week()].join('-')\n  },\n  month: s => {\n    return [s.year(), s.month()].join('-')\n  },\n  quarter: s => {\n    return [s.year(), s.quarter()].join('-')\n  },\n  year: s => {\n    return s.year()\n  }\n}\nprint.date = print.day\n\nconst addMethods = SpaceTime => {\n  SpaceTime.prototype.isSame = function(b, unit) {\n    let a = this\n    if (!unit) {\n      return null\n    }\n    if (typeof b === 'string' || typeof b === 'number') {\n      b = new SpaceTime(b, this.timezone.name)\n    }\n    //support 'seconds' aswell as 'second'\n    unit = unit.replace(/s$/, '')\n\n    if (print[unit]) {\n      return print[unit](a) === print[unit](b)\n    }\n    return null\n  }\n}\n\nmodule.exports = addMethods\n","const fns = require('../fns')\n\nconst addMethods = SpaceTime => {\n  const methods = {\n    isAfter: function(d) {\n      d = fns.beADate(d, this)\n      let epoch = fns.getEpoch(d)\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch > epoch\n    },\n    isBefore: function(d) {\n      d = fns.beADate(d, this)\n      let epoch = fns.getEpoch(d)\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch < epoch\n    },\n    isEqual: function(d) {\n      d = fns.beADate(d, this)\n      let epoch = fns.getEpoch(d)\n      if (epoch === null) {\n        return null\n      }\n      return this.epoch === epoch\n    },\n    isBetween: function(start, end) {\n      start = fns.beADate(start, this)\n      end = fns.beADate(end, this)\n      let startEpoch = fns.getEpoch(start)\n      if (startEpoch === null) {\n        return null\n      }\n      let endEpoch = fns.getEpoch(end)\n      if (endEpoch === null) {\n        return null\n      }\n      return startEpoch < this.epoch && this.epoch < endEpoch\n    }\n  }\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k]\n  })\n}\n\nmodule.exports = addMethods\n","const fns = require('../fns')\nconst days = require('../data/days')\nconst months = require('../data/months')\n\nconst addMethods = SpaceTime => {\n  const methods = {\n    i18n: data => {\n      //change the day names\n      if (fns.isObject(data.days)) {\n        days.set(data.days)\n      }\n      //change the month names\n      if (fns.isObject(data.months)) {\n        months.set(data.months)\n      }\n    }\n  }\n\n  //hook them into proto\n  Object.keys(methods).forEach(k => {\n    SpaceTime.prototype[k] = methods[k]\n  })\n}\n\nmodule.exports = addMethods\n","const quickOffset = require('./timezone/quick')\nconst findTz = require('./timezone/find')\nconst handleInput = require('./input')\nconst methods = require('./methods')\nlet timezones = require('../zonefile/unpack')\n\n//fake timezone-support, for fakers (es5 class)\nconst SpaceTime = function(input, tz, options = {}) {\n  //the holy moment\n  this.epoch = null\n  //the shift for the given timezone\n  this.tz = findTz(tz, timezones)\n  //whether to output warnings to console\n  this.silent = options.silent || true\n  // favour british interpretation of 02/02/2018, etc\n  this.british = options.dmy || options.british\n\n  //does the week start on sunday, or monday:\n  this._weekStart = 1 //default to monday\n  if (options.weekStart !== undefined) {\n    this._weekStart = options.weekStart\n  }\n  //add getter/setters\n  Object.defineProperty(this, 'd', {\n    //return a js date object\n    get: function() {\n      let offset = quickOffset(this)\n      //every computer is somewhere- get this computer's built-in offset\n      let bias = new Date(this.epoch).getTimezoneOffset() || 0\n      //movement\n      let shift = bias + offset * 60 //in minutes\n      shift = shift * 60 * 1000 //in ms\n      //remove this computer's offset\n      let epoch = this.epoch + shift\n      let d = new Date(epoch)\n      return d\n    }\n  })\n  //add this data on the object, to allow adding new timezones\n  Object.defineProperty(this, 'timezones', {\n    get: () => timezones,\n    set: obj => {\n      timezones = obj\n      return obj\n    }\n  })\n  //parse the various formats\n  if (input !== undefined || input === null) {\n    let tmp = handleInput(this, input, tz, options)\n    this.epoch = tmp.epoch\n  }\n}\n\n//(add instance methods to prototype)\nObject.keys(methods).forEach(k => {\n  SpaceTime.prototype[k] = methods[k]\n})\n\n// ¯\\_(ツ)_/¯\nSpaceTime.prototype.clone = function() {\n  return new SpaceTime(this.epoch, this.tz, {\n    silent: this.silent,\n    weekStart: this._weekStart\n  })\n}\n\n//return native date object at the same epoch\nSpaceTime.prototype.toLocalDate = function() {\n  return new Date(this.epoch)\n}\n\n//append more methods\nrequire('./methods/query')(SpaceTime)\nrequire('./methods/add')(SpaceTime)\nrequire('./methods/same')(SpaceTime)\nrequire('./methods/compare')(SpaceTime)\nrequire('./methods/i18n')(SpaceTime)\n\nmodule.exports = SpaceTime\n","const Spacetime = require('./spacetime')\n// const timezones = require('../data');\n\nconst whereIts = (a, b) => {\n  let start = new Spacetime(null)\n  let end = new Spacetime(null)\n  start = start.time(a)\n  //if b is undefined, use as 'within one hour'\n  if (b) {\n    end = end.time(b)\n  } else {\n    end = start.add(59, 'minutes')\n  }\n\n  let startHour = start.hour()\n  let endHour = end.hour()\n  let tzs = Object.keys(start.timezones).filter(tz => {\n    if (tz.indexOf('/') === -1) {\n      return false\n    }\n    let m = new Spacetime(null, tz)\n    let hour = m.hour()\n    //do 'calendar-compare' not real-time-compare\n    if (hour >= startHour && hour <= endHour) {\n      //test minutes too, if applicable\n      if (hour === startHour && m.minute() < start.minute()) {\n        return false\n      }\n      if (hour === endHour && m.minute() > end.minute()) {\n        return false\n      }\n      return true\n    }\n    return false\n  })\n  return tzs\n}\nmodule.exports = whereIts\n","module.exports = '6.4.1'","const Spacetime = require('./spacetime')\nconst whereIts = require('./whereIts')\nconst version = require('../_version')\n\nconst main = (input, tz, options) => new Spacetime(input, tz, options)\n\n//some helper functions on the main method\nmain.now = (tz, options) => new Spacetime(new Date().getTime(), tz, options)\nmain.today = (tz, options) => {\n  let s = new Spacetime(new Date().getTime(), tz, options)\n  return s.startOf('day')\n}\nmain.tomorrow = (tz, options) => {\n  let s = new Spacetime(new Date().getTime(), tz, options)\n  return s.add(1, 'day').startOf('day')\n}\nmain.yesterday = (tz, options) => {\n  let s = new Spacetime(new Date().getTime(), tz, options)\n  return s.subtract(1, 'day').startOf('day')\n}\nmain.extend = function(obj) {\n  Object.keys(obj).forEach(k => {\n    Spacetime.prototype[k] = obj[k]\n  })\n  return this\n}\n//find tz by time\nmain.whereIts = whereIts\nmain.version = version\n\n//aliases:\nmain.plugin = main.extend\nmodule.exports = main\n"],"names":["exports","year","d","Object","prototype","toString","call","isNaN","valueOf","input","str","len","pad","length","Array","join","toUpperCase","substr","i","j","k","String","replace","parseInt","toLowerCase","trim","tmp","isDate","getTime","epoch","s","isObject","clone","set","offset","delimiter","absOffset","Math","abs","sign","zeroPad","require$$0","serialize","getMonth","getDate","getHours","shouldChange","start","end","defaultOffset","Date","bias","getTimezoneOffset","shift","current","quickOffset","zones","timezones","obj","tz","undefined","console","warn","dst","jul","dec","hem","split","inSummer","isSummer","all","keys","data","forEach","Number","names","before","num","prefixes","name","fallbackTZ","safeIntl","Intl","DateTimeFormat","format","resolvedOptions","timezone","timeZone","guessTz","isOffset","isNumber","utcOffset","gmtOffset","toIana","parseOffset","m","match","local","cities","tzs","reduce","h","city","normalize","lookupTz","hasOwnProperty","test","id","Error","o","millisecond","second","minute","hour","day","date","month","week","walk","n","fn","unit","previous","startUnit","original","diff","ms","halfStep","units","valid","walkTo","getFullYear","seconds","milliseconds","wants","old","silent","shortMonths","longMonths","buildMapping","sep","mapping","i18n","parseFloat","parseTime","arr","startOf","ampm","monthLengths","isLeapYear","hasDate","max","months","parseYear","strFmt","reg","parse","givenTz","options","british","fns","toCardinal","dates","now","tonight","today","tomorrow","add","yesterday","subtract","christmas","minimumEpoch","defaults","handleArray","order","handleObject","assign","parseInput","isArray","namedDates","res","shortDays","longDays","isoOffset","isNegative","floor","ceil","titleCase","dayName","days","ordinal","monthName","time","hour24","hour12","quarter","season","era","json","numeric","iso","h24","toISOString","nice","aliases","mdy","dmy","ymd","printFormat","isValid","out","indexOf","sections","_","fmt","formatTimezone","G","GG","GGG","GGGG","y","yy","yyy","yyyy","yyyyy","Q","QQ","QQQ","QQQQ","M","MM","MMM","MMMM","w","ww","dd","D","dayOfYear","DD","DDD","E","EE","EEE","EEEE","EEEEE","e","ee","eee","eeee","eeeee","a","aa","aaa","aaaa","h12","hh","H","HH","mm","ss","A","z","zz","zzz","zzzz","Z","ZZ","ZZZ","ZZZZ","addAlias","char","to","toName","unixFmt","chars","quoteOn","push","txt","c","doUnit","endOf","duration","percent","toFixed","progress","nearest","prog","climb","b","isBefore","isAfter","diffOne","fastYear","years","msDiff","minutes","hours","weeks","reverseDiff","main","beADate","reversed","waterfall","qualifiers","almost","over","getDiff","later","earlier","isSame","u","pluralize","value","slice","since","isNow","every","rounded","qualified","precise","englishValues","englishValue","nextUnit","nextValue","splice","north","south","quarterhour","_weekStart","q","quarters","hemisphere","seasons","decade","century","isDay","find","next","result","parseDst","findTz","epochShift","found","hasDst","Boolean","default_offset","change","back","summer","winter","isDST","inSummerTime","methods","handleInput","hasDST","ends","leapYear","last","isAwake","isAsleep","log","logYear","debug","from","fromNow","weekStart","inDST","round","each","validate","confirm","want","monthLength","getMilliseconds","getSeconds","getMinutes","hourFloat","which","dayTime","times","morning","breakfast","noon","lunch","afternoon","evening","dinner","night","midnight","getDay","clearMinutes","sum","setDate","setFullYear","setHours","setMinutes","setMonth","toAdd","minus","thisOne","skipWeeks","millenium","require$$1","require$$2","addMethods","Space","keep","dstAwareUnits","keepDate","rollMonth","SpaceTime","plus","print","getEpoch","isEqual","isBetween","startEpoch","endEpoch","defineProperty","get","toLocalDate","require$$3","require$$4","require$$5","whereIts","Spacetime","startHour","endHour","filter","extend","version","plugin"],"mappings":"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"}